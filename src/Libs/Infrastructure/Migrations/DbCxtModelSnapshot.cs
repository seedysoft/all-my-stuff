// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seedysoft.Libs.Infrastructure.DbContexts;

#nullable disable

namespace Seedysoft.Libs.Infrastructure.Migrations
{
    [DbContext(typeof(DbCxt))]
    partial class DbCxtModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.Outbox", b =>
                {
                    b.Property<long>("OutboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SentAtDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SubscriptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OutboxId");

                    b.ToTable("Outbox", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.OutboxView", b =>
                {
                    b.Property<long>("OutboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SentAtDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SentAtDateTimeUnix")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SubscriptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("OutboxView", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.Pvpc", b =>
                {
                    b.Property<string>("AtDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MWhPriceInEuros")
                        .HasColumnType("TEXT");

                    b.HasKey("AtDateTimeOffset");

                    b.ToTable("Pvpc", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.SubcriptionDataView", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("MailAddress")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SubscriberId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SubscriptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubscriptionName")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TelegramUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WebUrl")
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("SubcriptionDataView", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.Subscriber", b =>
                {
                    b.Property<long>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MailAddress")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TelegramUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubscriberId");

                    b.ToTable("Subscriber", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.SubscriberSubscription", b =>
                {
                    b.Property<long>("SubscriberId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SubscriberId", "SubscriptionId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriberSubscription", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.Subscription", b =>
                {
                    b.Property<long>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.TuyaDevice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Version")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("TuyaDevice", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.WebData", b =>
                {
                    b.Property<long>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CssSelector")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("body");

                    b.Property<string>("CurrentWebContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IgnoreChangeWhen")
                        .HasColumnType("TEXT");

                    b.Property<string>("SeenAtDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.Property<long>("TakeAboveBelowLines")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(3L);

                    b.Property<string>("UpdatedAtDateTimeOffset")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseHttpClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("WebUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SubscriptionId");

                    b.ToTable("WebData", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.Core.Entities.SubscriberSubscription", b =>
                {
                    b.HasOne("Seedysoft.Libs.Core.Entities.Subscriber", null)
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Seedysoft.Libs.Core.Entities.Subscription", null)
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
