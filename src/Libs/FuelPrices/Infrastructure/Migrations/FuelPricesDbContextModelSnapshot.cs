// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Seedysoft.Libs.FuelPrices.Infrastructure.Data;

#nullable disable

namespace Seedysoft.Libs.FuelPrices.Infrastructure.Migrations
{
    [DbContext(typeof(FuelPricesDbContext))]
    partial class FuelPricesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Seedysoft.Libs.FuelPrices.Core.Entities.ComunidadAutonoma", b =>
                {
                    b.Property<int>("IdComunidadAutonoma")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtDate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreComunidadAutonoma")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdComunidadAutonoma", "AtDate");

                    b.ToTable("ComunidadAutonoma", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.FuelPrices.Core.Entities.EstacionProductoPrecio", b =>
                {
                    b.Property<int>("IdEstacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProducto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentimosDeEuro")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEstacion", "IdProducto", "AtDate");

                    b.ToTable("EstacionProductoPrecio", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.FuelPrices.Core.Entities.EstacionServicio", b =>
                {
                    b.Property<int>("IdEstacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtDate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LongitudWgs84")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Margen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rotulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdEstacion", "AtDate");

                    b.ToTable("EstacionServicio", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.FuelPrices.Core.Entities.Municipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMunicipio", "AtDate");

                    b.ToTable("Municipio", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.FuelPrices.Core.Entities.ProductPrice", b =>
                {
                    b.Property<int>("AtDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CentimosDeEuro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEstacion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProducto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LongitudWgs84")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Margen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreProductoAbreviatura")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rotulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("ProductPrice", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.FuelPrices.Core.Entities.ProductoPetrolifero", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtDate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreProductoAbreviatura")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdProducto", "AtDate");

                    b.ToTable("ProductoPetrolifero", (string)null);
                });

            modelBuilder.Entity("Seedysoft.Libs.FuelPrices.Core.Entities.Provincia", b =>
                {
                    b.Property<int>("IdProvincia")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AtDate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdComunidadAutonoma")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreProvincia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdProvincia", "AtDate");

                    b.ToTable("Provincia", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
