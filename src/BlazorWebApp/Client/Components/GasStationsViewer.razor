@using Model = Seedysoft.Libs.GasStationPrices.ViewModels.GasStationModel;

<MudDataGrid @ref="DataGridRef"
             Bordered
             Dense
             Filterable
             FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive"
             FilterMode="DataGridFilterMode.ColumnFilterMenu"
             FixedHeader="true"
             Height="450"
             Hover
             Items="Elements"
             Loading="IsLoading"
             ReadOnly
             RowClassFunc="RowClassFuncion"
             RowsPerPage="10"
             SelectedItemChanged="OnSelectedItemChanged"
             ShowFilterIcons="true"
             SortMode="SortMode.Single"
             Striped
             T="Model"
             Virtualize>

    <ColGroup>
        <col style="width: 50%;" />
        @foreach (var item in Libs.GasStationPrices.Models.Minetur.ProductoPetrolifero.All)
        {
            var IsHidden = !PetroleumProductsSelectedIds.Contains(item.IdProducto);
            <col hidden="@IsHidden" />
        }
    </ColGroup>

    <Columns>
        <PropertyColumn Property="@(x => x.RotuloTrimed)" Filterable="true" Sortable="true" StickyLeft Title="Rótulo">
            <CellTemplate>
                <span style="white-space: nowrap;">@context.Item.RotuloTrimed</span>
            </CellTemplate>
        </PropertyColumn>

        @foreach (var item in Libs.GasStationPrices.Models.Minetur.ProductoPetrolifero.All)
        {
            var CurrentProductId = item.IdProducto;
            var IsHidden = !PetroleumProductsSelectedIds.Contains(CurrentProductId);
            <TemplateColumn AggregateDefinition="@(new AggregateDefinition<Model>())"
                            CellClass="mud-table-cell-align-right"
                            Filterable="true"
                            @* FilterOperators="@(new HashSet<string>([MudBlazor.FilterOperator.Number.Empty, MudBlazor.FilterOperator.Number.NotEmpty]))" *@
                            FooterClass="mud-table-cell-align-right"
                            Hidden="@IsHidden"
                            Sortable="true"
                            SortBy="@(x => x.GetSortBy(CurrentProductId))"
                            Title="@item.Abreviatura">

                <AggregateTemplate>
                    @{
                        MarkupString TextToShow;
                        if (context.Any())
                        {
                            var CurrentPrices = context.Select(x => x.Prices.FirstOrDefault(y => y.ProductId == CurrentProductId)?.Price ?? null).Where(x => x != null).Distinct();
                            if (CurrentPrices.Any())
                            {
                                var Expensivest = CurrentPrices.Max();
                                var Cheapest = CurrentPrices.Min();
                                var Average = CurrentPrices.Average();
                                TextToShow = new($"<p>L {Cheapest:0.000}</p><p>A {Average:0.000}</p><p>H {Expensivest:0.000}</p>");
                            }
                            else
                            {
                                TextToShow = new();
                            }
                        }
                        else
                        {
                            TextToShow = new();
                        }
                    }

                    <div>@TextToShow</div>
                </AggregateTemplate>

                <CellTemplate>
                    @(context.Item.Prices.First(y => y.ProductId == item.IdProducto).Price)
                </CellTemplate>

            </TemplateColumn>
        }
    </Columns>

    <LoadingContent>
        Loading Content ....
    </LoadingContent>

    <NoRecordsContent>
        No data
    </NoRecordsContent>

    <PagerContent>
        <MudDataGridPager Class="pa-4"
                          ShowNavigation="true"
                          ShowPageNumber="true"
                          T="Model" />
    </PagerContent>

</MudDataGrid>
