# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: [ubuntu-latest]
    steps:
      - name: Name release
        id: name-release
        run: |
          echo "release_name=$(printf '%(%Y.%m.%d)T\n' -1)" >> $GITHUB_OUTPUT

      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Setup .NET
        id: setup-dotnet
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 8.0.x

      - name: Publish linux-arm64 runtime
        id: publish-linux-arm64-runtime
        run: |
          # Publish
          dotnet publish Seedysoft.sln -c Release -r linux-arm64  -p:BlazorCacheBootResources=false  -p:PublishTrimmed=false  --sc --verbosity normal -o ${{ steps.name-release.outputs.release_name }}
          # Pack files
          tar czvf "${{ steps.name-release.outputs.release_name }}.tar.gz" "${{ steps.name-release.outputs.release_name }}"
          # Delete output directory
          rm -r "${{ steps.name-release.outputs.release_name }}"

      - name: Publish win-x64 runtime
        id: publish-win-x64-runtime
        run: |
          # Publish
          dotnet publish Seedysoft.sln -c Release -r win-x64      -p:BlazorCacheBootResources=false  -p:PublishTrimmed=false  --sc --verbosity normal -o ${{ steps.name-release.outputs.release_name }}
          # Pack files
          7z a -tzip "${{ steps.name-release.outputs.release_name }}.zip" "./${{ steps.name-release.outputs.release_name }}/*"
          # Delete output directory
          rm -r "${{ steps.name-release.outputs.release_name }}"

      - name: Make Release
        id: make-release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ github.ref_name }}
          files: |
            "${{ steps.name-release.outputs.release_name }}.tar.gz"
            "${{ steps.name-release.outputs.release_name }}.zip"
