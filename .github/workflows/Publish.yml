# -v  | --verbosity <LEVEL> # Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]. The default is minimal.

name: Publish

defaults:
  run:
    shell: bash

permissions:
  contents: read

on:
  push:
    tags:
      - '**'
  workflow_dispatch:
  
jobs:

  linux:
    name: Publish on linux
    runs-on: [ ubuntu-latest ]
    strategy:
      matrix:
        runtime: [ 'linux-arm64', 'linux-x64' ]
    steps:
      - uses: actions/checkout@main
      - name: Setup dotnet
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 8
      - name: Build
        run: dotnet build Seedysoft.Tests.sln -a "${{ matrix.runtime }}" -c Release --nologo -v n
      - name: Publish runtimes
        id: linux-publish-runtimes
        run: |
          # Publish
          dotnet publish ./src/BlazorWebApp/Server/Seedysoft.BlazorWebApp.Server.csproj -c Release --nologo -p:PublishTrimmed=false -r "${{ matrix.runtime }}" --sc -v n
          # Pack files
          tar czvf "${{ matrix.runtime }}.${{ github.ref_name }}.tar.gz" -C "./src/BlazorWebApp/Server/bin/Release/net8.0/${{ matrix.runtime }}/publish/" *

  windows:
    name: Publish on windows
    runs-on: [ windows-latest ]
    strategy:
      matrix:
        runtime: [ 'win-x64' ]
    steps:
      - uses: actions/checkout@main
      - name: Setup dotnet
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 8
      - name: Build
        run: dotnet build Seedysoft.Tests.sln -a "${{ matrix.runtime }}" -c Release --nologo -v n
      - name: Publish runtimes
        id: windows-publish-runtimes
        run: |
          # Publish
          dotnet publish ./src/BlazorWebApp/Server/Seedysoft.BlazorWebApp.Server.csproj -c Release --nologo -p:PublishTrimmed=false -r "${{ matrix.runtime }}" --sc -v n
          # Pack files
          7z a -tzip "${{ matrix.runtime }}.${{ github.ref_name }}.zip" -C "./src/BlazorWebApp/Server/bin/Release/net8.0/${{ matrix.runtime }}/publish/" *

  release:
    name: Create a release
    needs: [ linux, windows ]
    runs-on: [ ubuntu-latest ]
    steps:        
      - name: Make Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ github.ref_name }}
          fail_on_unmatched_files: false
          generate_release_notes: true
          files: |
            "*${{ github.ref_name }}.tar.gz"
            "*${{ github.ref_name }}.zip"