# -v  | --verbosity <LEVEL> # Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]. The default is minimal.

name: Publish

defaults:
  run:
    shell: bash

permissions:
  contents: write

on:
  push:
    tags:
      - '**'
  workflow_dispatch:
  
jobs:
  publish_and_pack:
    name: Publish and pack
    strategy:
      matrix:
        runtime: [ linux-arm64, linux-x64, win-x64 ]
        include:
          - runtime: "linux-arm64"
            extension: ".tar.gz"
            os: ubuntu-latest
          - runtime: "linux-x64"
            extension: ".tar.gz"
            os: ubuntu-latest
          - runtime: "win-x64"
            extension: ".zip"
            os: windows-latest
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@main
      - name: Setup dotnet
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 8
      - name: Build
        id: build
        run: dotnet build Seedysoft.Tests.sln -c Release --nologo -v m
      - name: Publish
        id: publish
        if: steps.build.outcome == 'success'
        run: |
          mkdir -p "./pub/${{ matrix.runtime }}"
          dotnet publish ./src/BlazorWebApp/Server/Seedysoft.BlazorWebApp.Server.csproj -c Release --no-restore --nologo -o "./pub/${{ matrix.runtime }}" -p:PublishTrimmed=false -r "${{ matrix.runtime }}" --sc -v m
      - name: Pack
        id: pack
        if: steps.publish.outcome == 'success'          
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
              7z a -r -tzip "./pub/${{ matrix.runtime }}.${{ github.ref_name }}.zip" "./pub/${{ matrix.runtime }}" *
          else
              tar czf "./pub/${{ matrix.runtime }}.${{ github.ref_name }}.tar.gz" -C "./pub/${{ matrix.runtime }}/" .
          fi
      - name: Upload published app as artifact
        if: steps.pack.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: '${{ matrix.runtime }}'
          path: './pub/*'
          compression-level: 0
          if-no-files-found: error # `warn` or `ignore` are also available, defaults to `warn`
          
  release:
    name: Create a release
    needs: publish_and_pack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Make download folder
        run: mkdir -p ./pub/
      - name: Download published app as artifact
        uses: actions/download-artifact@v4
        with:
          path: ./pub
      - name: Make Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ github.ref_name }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            ./pub/*/*.tar.gz
            ./pub/*/*.zip
