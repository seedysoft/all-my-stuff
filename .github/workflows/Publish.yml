# -v  | --verbosity <LEVEL> # Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]. The default is minimal.

name: Publish

defaults:
  run:
    shell: bash

permissions:
  contents: write

on:
  push:
    tags:
      - '**'
  workflow_dispatch:
  
jobs:
  publish-and-pack:
    name: Publish
    strategy:
      matrix:
        # runtime: [ linux-arm64, linux-x64, win-x64 ]
        runtime: [ linux-arm64, linux-x64 ]
        include:
          - runtime: "linux-arm64"
            extension: ".tar.gz"
            os: ubuntu-latest
          - runtime: "linux-x64"
            extension: ".tar.gz"
            os: ubuntu-latest
          # - runtime: "win-x64"
          #   extension: ".zip"
          #   os: windows-latest
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@main
      - name: Setup dotnet
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: 8
      - name: Build
        run: dotnet build Seedysoft.Tests.sln -c Release --nologo -v m
      - name: Publish
        id: publish
        run: |
          mkdir -p "./pub/${{ matrix.runtime }}"
          dotnet publish ./src/BlazorWebApp/Server/Seedysoft.BlazorWebApp.Server.csproj -c Release --nologo --no-restore -o "./pub/${{ matrix.runtime }}" -p:PublishTrimmed=false -r "${{ matrix.runtime }}" --sc -v m
      - name: Package (Linux)
        if: steps.publish.outcome == 'success' && matrix.os == 'ubuntu-latest'
        run: |
          echo "${{ github.workspace }}/pub/${{ matrix.runtime }}.${{ github.ref_name }}.tar.gz"
          echo "${{ github.workspace }}/pub/${{ matrix.runtime }}"
          echo "./pub/${{ matrix.runtime }}.${{ github.ref_name }}.tar.gz"
          echo "./pub/${{ matrix.runtime }}"
          tar czf "${{ github.workspace }}/pub/${{ matrix.runtime }}.${{ github.ref_name }}.tar.gz" "${{ github.workspace }}/pub/${{ matrix.runtime }}"
      - name: Package (Windows)
        if: steps.publish.outcome == 'success' && matrix.os == 'windows-latest'
        run: 7z a -r -tzip "./pub/${{ matrix.runtime }}.${{ github.ref_name }}.zip" "./pub/${{ matrix.runtime }}" *
          
  release:
    name: Create a release
    needs: [ publish-and-pack ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Show current directory
        run: pwd
      - name: List files
        run: ls -la
      - name: Make Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ github.ref_name }}
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            ${{ github.workspace }}/pub/**.tar.gz
            ${{ github.workspace }}/pub/**.zip
